import groovy.json.JsonOutput
import groovy.json.JsonSlurper

apply plugin: 'java'
apply plugin: 'maven-publish'

sourceSets.main.resources { srcDirs += 'resources' }
sourceSets.main.resources { srcDirs += 'plugins-meta/resources' }

tasks.register('collectMetadata', Exec) {
  commandLine 'bash', 'ls-schemas-extractor/bin/ls-schemas-extractor'
}

processResources {
  dependsOn collectMetadata
  doLast {
    println("Processing JSON files in ${outputs.files.asPath}")
    fileTree(dir: outputs.files.asPath).filter { file -> file.name.endsWith('.json') }.each { file ->
      def slurper = new JsonSlurper()
      println("Processing schemas json: ${file}")
      def jsonContent = slurper.parse(file)
      def metadataFile = new File(file.parent, "${file.name}.metadata")
      if (metadataFile.exists()) {
        println("Processing metadata json: ${metadataFile}")
        def metadataContent = new HashMap()
        metadataContent.putAll(slurper.parse(metadataFile as File) as Map)
        metadataFile.delete()
        def mergedContent = new HashMap()
        mergedContent.put("metadata", metadataContent)
        mergedContent.put("schemas", jsonContent)
        file.text = JsonOutput.toJson(mergedContent)
      }
      else {
        file.text = JsonOutput.toJson(jsonContent)
      }
    }
  }
}

jar {
  includeEmptyDirs false
  eachFile { details ->
    details.path = "terraform/$details.path"
  }
}
